alias amce='mcedit ~/.zsh_aliases; zsh'
alias cfe='tput reset; neofetch'
alias chx='chmod +x'
alias clear='tput reset'
alias clr='tput reset'
# alias cpdots='cp ~/.zshrc ~/github/dotfiles/.zshrc && cp ~/.zsh_aliases ~/github/dotfiles/.zsh_aliases && cp ~/packagelist.txt ~/github/dotfiles/packagelist.txt && echo "dotfiles copied to gihub dir!"'
alias csi='tput reset; neofetch -L; inxi -I -S; echo'
alias csic='tput reset; neofetch -L; inxi -I -v 1; colorinvaders'
alias csif='tput reset; neofetch -L; inxi -F -v 4; echo; xdgfetch'
alias cursorhide="printf '\e[?25l'"
alias cursorshow="printf '\e[?25h'"
alias drivespeed='hdparam -Tt'
alias inxi='inxi -c 10'
alias mce='mcedit'
alias nohup='nohup '
alias reset='tput reset'
alias rex='remote-exec'
alias S='sudo '
alias sdi='sudo dpkg -i'
alias speedo='speedometer -s -r ens33 -c -s -t ens33'
alias strapg='apg -s -a 1 -m 30 -n 4'
alias sudo='sudo '
alias timewatch="printf '\e[?25l'; watch -tn 1 date +%D%t%I:%M:%S"
alias vta='vtop --theme acid'
alias zmce='mcedit ~/.zshrc; zsh'
alias aptm='/home/$USER/github/UsefulScripts/aptmarklist/aptmarklist.sh'
alias aptt='/home/$USER/github/UsefulScripts/apttool/apttool.sh'
alias cpdots='/home/$USER/github/UsefulScripts/misc/cpdots.sh'
alias erm='/home/$USER/github/UsefulScripts/easyrm/easyrm.sh'
alias fakegame='/home/$USER/Scripts/discordfakegame.sh'
alias lyrics='/home/$USER/github/UsefulScripts/misc/lyrics.sh'
alias passman='/home/$USER/github/UsefulScripts/gpgpassman/gpgpassman.sh'
alias speedtest='/home/$USER/github/UsefulScripts/speedtest/speedtest.sh'
alias sudoBot='cursorhide; /home/$USER/sudoBot/sudostart.sh'
alias xdgfetch='/home/$USER/github/UsefulScripts/xdgfetch/xdgfetch -c 2'
alias urltotmp='/home/$USER/Scripts/urltotmp.sh'
alias wttrref='clr; /home/$USER/github/UsefulScripts/misc/wttrrefresh.sh'
alias colortest='bash -c "$(wget --quiet https://gist.githubusercontent.com/wagnermoschini/8893311/raw/9de710eea1a86fb955fb221e847d722e9bc3b024/colortest.sh -O -)"'
alias colorinvaders='bash -c "$(wget --quiet https://github.com/chrisduerr/dotfiles/raw/master/cache/home/undeadleech/Scripts/test_colors0 -O -)"'

conf="/home/$USER/.config"
docs="/home/$USER/Documents"
down="/home/$USER/Downloads"
pics="/home/$USER/Pictures"
github="/home/$USER/github"

dirsize () {
    du -H --max-depth=1 "$@" | sort -n -r
}

dirsize-a () {
    du -H "$@" | sort -n -r
}

filesize () {
    du -a --max-depth=1 "$@" | sort -n -r
}

filesize-a () {
    du -a "$@" | sort -n -r
}

remote-exec () {
    bash -c "$(wget --quiet $@ -O -)"
}

sdif () {
    sudo  dpkg -i $2 || sudo apt install -f
}

todo () {
    case $1 in
        -a*|--a*)
            TODOADD="$(echo "$@" | tr -d ':')"
            echo "-- ${TODOADD:3}" >> ~/TODO.list
            echo
            echo "TODO.list:"
            cat ~/TODO.list
            echo
            ;;
        -i*|--i*)
            TODOADD="$(echo "$@" | tr -d ':')"
            echo "!! ${TODOADD:3}" >> ~/TODO.list
            echo
            echo "TODO.list:"
            cat ~/TODO.list
            echo
            ;;
        -r*|--r*)
            TODOITEM="$(grep -a "$2" ~/TODO.list)"
            DELNUM="$(echo "$TODOITEM" | wc -l)"
            if ! grep -q "$2" ~/TODO.list; then
                echo "$2 not found in TODO list!"
                exit 0
            fi
            if [[ "$DELNUM" != "1" ]]; then
                echo "$DELNUM results found; refine your input."
                exit 1
            fi
            sed -i s:"$TODOITEM"::g ~/TODO.list
            sed -i '/^$/d' ~/TODO.list
            TODOLIST="$(cat ~/TODO.list)"
            if [ ! -z "$TODOLIST" ]; then
                echo
                echo "TODO.list:"
                cat ~/TODO.list
                echo
            else
                echo "No items in TODO.list; yay!"
            fi
            ;;
        -h*|--h*)
            echo
            echo "TODO.list usage:"
            echo "todo    : Lists items in TODO.list"
            echo "todo -a : Adds item to TODO.list"
            echo "todo -i : Adds item to TODO.list with important status"
            echo "todo -r : Removes items from TODO.list"
            echo
            ;;
        *)
            if [ ! -f ~/TODO.list ]; then
                touch ~/TODO.list
            fi
            TODOLIST="$(cat ~/TODO.list)"
            if [ ! -z "$TODOLIST" ]; then
                echo
                echo "TODO.list:"
                cat ~/TODO.list
                echo
            else
                echo "No items in TODO.list; yay!"
            fi
    esac
}

wttr (){
    LOCATION="$1"
    FLOCATION="$2"
    case $1 in
        0*)
            if [ -z "$FLOCATION" ]; then
                FLOCATION="$location"
            fi
            tput reset
            curl "wttr.in/$FLOCATION?0"
            LOCATION=""
            FLOCATION=""
            ;;
        1*)
            if [ -z "$FLOCATION" ]; then
                FLOCATION="$location"
            fi
            tput reset
            curl "wttr.in/$FLOCATION?1"
            LOCATION=""
            FLOCATION=""
            ;;
        2*)
            if [ -z "$FLOCATION" ]; then
                FLOCATION="$location"
            fi
            tput reset
            curl "wttr.in/$FLOCATION?2"
            LOCATION=""
            FLOCATION=""
            ;;
        *)
            if [ -z "$LOCATION" ]; then
                LOCATION="$location"
            fi
            tput reset
            curl "wttr.in/$LOCATION"
            LOCATION=""
    esac
}